cd "${main_single_repo}"

mkdir -p api_tests.d
echo true > api_tests.d/test1
g 'No comment.' automatic > "${output_dir}/2.1.txt" 2>&1
version="$(tail -n 1 < "${output_dir}/2.1.txt")"
if ! test "${version}" == '0.1.0'; then
  return 1
fi

g 'No comment.' automatic > "${output_dir}/2.2.txt" 2>&1
version="$(tail -n 1 < "${output_dir}/2.2.txt")"
if ! test "${version}" == '0.1.0'; then
  return 2
fi

echo true >> api_tests.d/test1
g 'No comment.' automatic > "${output_dir}/2.3.txt" 2>&1
version="$(tail -n 1 < "${output_dir}/2.3.txt")"
if ! test "${version}" == '0.2.0'; then
  return 3
fi

g 'No comment.' automatic > "${output_dir}/2.4.txt" 2>&1
version="$(tail -n 1 < "${output_dir}/2.4.txt")"
if ! test "${version}" == '0.2.0'; then
  return 4
fi

echo false > api_tests.d/test1
g 'No comment.' automatic > "${output_dir}/2.5.txt" 2>&1
version="$(tail -n 1 < "${output_dir}/2.5.txt")"
if ! test "${version}" == '0.3.0'; then
  return 5
fi

g 'No comment.' automatic > "${output_dir}/2.6.txt" 2>&1
version="$(tail -n 1 < "${output_dir}/2.6.txt")"
if ! test "${version}" == '0.3.0'; then
  return 6
fi

touch thing1
g 'No comment.' minor > "${output_dir}/2.7.txt" 2>&1
version="$(tail -n 1 < "${output_dir}/2.7.txt")"
if ! test "${version}" == '0.4.0'; then
  return 7
fi

g 'No comment.' minor > "${output_dir}/2.8.txt" 2>&1
version="$(tail -n 1 < "${output_dir}/2.8.txt")"
if ! test "${version}" == '0.4.0'; then
  return 8
fi
