#!/bin/bash

function early_fail {
  echo "Failed to initialize testing.  (${1})" >&2
  exit 1
}


PATH="$HOME/code/github/abugher/git-automation:${PATH}"

test_dir="/tmp/git-automation_tests"
master_super_repo="${test_dir}/master_super"
master_sub_repo="${test_dir}/master_sub"
master_single_repo="${test_dir}/master_single"
main_super_repo="${test_dir}/main_super"
main_sub_repo="${test_dir}/sub_repo"
sub_sub_repo="${main_super_repo}/sub"
old_cwd="${PWD}"

test_count=0
failure_count=0
success_count=0

refresh_test_dir() {
  rm -rf "${test_dir}"                                          || fail 0
  mkdir "${test_dir}"                                           || fail 1

  mkdir "${master_single_repo}"                                 || fail 2
  cd "${master_single_repo}"                                    || fail 3
  git init --bare                                               || fail 4

  git clone "${master_single_repo}" "${main_single_repo}"       || fail 5
  cd "${main_single_repo}"                                      || fail 6
  touch thing0                                                  || fail 7
  git add thing0                                                || fail 8
  git commit -m 'No comment.'                                   || fail 9
  git push                                                      || fail 10

  mkdir "${master_super_repo}"                                  || fail 11
  cd "${master_super_repo}"                                     || fail 12
  git init --bare                                               || fail 13
                                                                         
  git clone "${master_super_repo}" "${main_super_repo}"         || fail 14
  cd "${main_super_repo}"                                       || fail 15
  touch thing0                                                  || fail 16
  git add thing0                                                || fail 17 
  git commit -m 'No comment.'                                   || fail 18
  git push                                                      || fail 19
                                                                     
  mkdir "${master_sub_repo}"                                    || fail 20
  cd "${master_sub_repo}"                                       || fail 21
  git init --bare                                               || fail 22
                                                                      
  git clone "${master_sub_repo}" "${main_sub_repo}"             || fail 23
  cd "${main_sub_repo}"                                         || fail 24
  touch thing0                                                  || fail 25
  git add thing0                                                || fail 26
  git commit -m 'No comment.'                                   || fail 27
  git push                                                      || fail 28
                                                                       
  cd "${main_super_repo}"                                       || fail 28
  git submodule add "${master_sub_repo}" "${sub_sub_repo}"      || fail 29
  git submodule update --init                                   || fail 30
                                                                        
  cd "${test_dir}"                                              || fail 31
}

for t in api_tests.d/*; do
  if test 'api_tests.d/*' == "${t}"; then
    continue
  fi
  echo "${t}"
  let test_count++
  lineno=0
  sc=0
  fc=0
  tc=0
  while read command; do
    let lineno++
    oldpwd=$PWD
    cd "${main_super_repo}"
    let tc++
    if eval "${command}" >/dev/null 2>&1; then
      #echo "Pass:  ${test_count}"
      let sc++
    else
      echo "Fail:  ${lineno}"
      let fc++
    fi
    cd $oldpwd
  done < "${t}"
  if test '0' == "${fc}"; then
    let success_count++
  else
    let failure_count++
  fi
  echo "Success:  ${sc}/${tc}"
  echo "Failures: ${fc}/${tc}"
done

echo "total"
echo "Success:  ${success_count}/${test_count}"
echo "Failures: ${failure_count}/${test_count}"
