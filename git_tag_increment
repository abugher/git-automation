#!/bin/bash

arg="${1}"

old_tag=$(
  git tag \
    | tail -n 1
)

if test '' == "${old_tag}"; then
  tag=0.0.0
else
  level=patch
  if test 'automatic' == "${arg}" -a -e ./api_tests; then
    if test -e .api_tests.previous; then
      while read line; do
        if echo "${line}" | grep -qv '^ *$'; then
          found=no
          while read other_line; do
            if test "${line}" == "${other_line}"; then
              found=yes
            fi
          done < .api_tests.previous
          if 'no' == "${found}"; then
            level=minor
          fi
        fi
      done < api_tests
      while read line; do
        if echo "${line}" | grep -qv '^ *$'; then
          found=no
          while read other_line; do
            if test "${line}" == "${other_line}"; then
              found=yes
            fi
          done < api_tests
          if 'no' == "${found}"; then
            level=major
          fi
        fi
      done < .api_tests.previous
    else
      level=minor
    fi
    cp api_tests .api_tests.previous
  fi

  case "${level}" in
    major)
      tag=$(
        echo "${old_tag}" \
          | sed 's/\./\n/g' \
          | { 
            readarray tag_parts
            let tag_parts[0]++
            tag_parts[1]=0
            tag_parts[2]=0
            for part in "${tag_parts[@]}"; do
              echo "${part}"
            done
          } \
          | while read l; do
            if echo "${l}" | grep -qE '[0-9]'; then
              echo -n $l'.'
            fi
          done \
          | sed 's/\.$//'
      )
      ;;
    minor)
      tag=$(
        echo "${old_tag}" \
          | sed 's/\./\n/g' \
          | { 
            readarray tag_parts
            let tag_parts[1]++
            tag_parts[2]=0
            for part in "${tag_parts[@]}"; do
              echo "${part}"
            done
          } \
          | while read l; do
            if echo "${l}" | grep -qE '[0-9]'; then
              echo -n $l'.'
            fi
          done \
          | sed 's/\.$//'
      )
      ;;
    patch)
      tag=$(
        echo "${old_tag}" \
          | sed 's/\./\n/g' \
          | { 
            readarray tag_parts
            let tag_parts[2]++
            for part in "${tag_parts[@]}"; do
              echo "${part}"
            done
          } \
          | while read l; do
            if echo "${l}" | grep -qE '[0-9]'; then
              echo -n $l'.'
            fi
          done \
          | sed 's/\.$//'
      )
      ;;
    *)
      echo "ERROR:  Unrecognized argument:  '${level}'"
      exit 1
      ;;
  esac
fi

echo "${level}" > /tmp/level.txt
git tag -a "${tag}" -m "Automatic ${level} increment."
