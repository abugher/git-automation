#!/bin/bash

shopt -s expand_aliases
alias unpath="sed 's#^.*/##g'"

arg="${1}"

old_tag=$(
  git tag \
    | sort -V \
    | tail -n 1
)

if test '' == "${old_tag}"; then
  tag=0.0.0
else
  level=patch
  if test 'automatic' == "${arg}" -a -e api_tests.d; then
    if test -d .api_tests.previous.d; then
      for test_file in api_tests.d/*; do
        if test 'api_tests.d/*' == "${test_file}"; then
          continue
        fi
        test_name="$(echo "${test_file}" | unpath)"
        if diff -q "${test_file}" .api_tests.previous.d/"${test_name}"; then
          level=minor
        fi
      done
      for test_file in api_tests.d/*; do
        if test 'api_tests.d/*' == "${test_file}"; then
          continue
        fi
        test_name="$(echo "${test_file}" | unpath)"
        if ! test -e .api_tests.previous.d/"${test_name}"; then
          level=minor
        fi
      done
      for test_file in .api_tests.previous.d/*; do
        if test '.api_tests.previous.d/*' == "${test_file}"; then
          continue
        fi
        test_name="$(echo "${test_file}" | unpath)"
        if ! test -e api_tests.d/"${test_name}"; then
          echo "debug:  test_file='${test_file}'"
          echo "debug:  test_file='${test_name}'"
          level=major
        fi
      done
    fi
    rsync -r --delete api_tests.d/ .api_tests.previous.d/
  fi

  case "${level}" in
    major)
      tag=$(
        echo "${old_tag}" \
          | sed 's/\./\n/g' \
          | { 
            readarray tag_parts
            let tag_parts[0]++
            tag_parts[1]=0
            tag_parts[2]=0
            for part in "${tag_parts[@]}"; do
              echo "${part}"
            done
          } \
          | while read l; do
            if echo "${l}" | grep -qE '[0-9]'; then
              echo -n $l'.'
            fi
          done \
          | sed 's/\.$//'
      )
      ;;
    minor)
      tag=$(
        echo "${old_tag}" \
          | sed 's/\./\n/g' \
          | { 
            readarray tag_parts
            let tag_parts[1]++
            tag_parts[2]=0
            for part in "${tag_parts[@]}"; do
              echo "${part}"
            done
          } \
          | while read l; do
            if echo "${l}" | grep -qE '[0-9]'; then
              echo -n $l'.'
            fi
          done \
          | sed 's/\.$//'
      )
      ;;
    patch)
      tag=$(
        echo "${old_tag}" \
          | sed 's/\./\n/g' \
          | { 
            readarray tag_parts
            let tag_parts[2]++
            for part in "${tag_parts[@]}"; do
              echo "${part}"
            done
          } \
          | while read l; do
            if echo "${l}" | grep -qE '[0-9]'; then
              echo -n $l'.'
            fi
          done \
          | sed 's/\.$//'
      )
      ;;
    *)
      echo "ERROR:  Unrecognized argument:  '${level}'"
      exit 1
      ;;
  esac
fi

echo "${level}" > /tmp/level.txt
git tag -a "${tag}" -m "Automatic ${level} increment."
